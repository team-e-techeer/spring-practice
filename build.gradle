plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // asciidoctor 추가
}

group = 'net.schoolvery'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// snippetsDir 설정하기
ext {
	snippetsDir = file('build/generated-snippets')
}

// bootjar 설정하기
bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'BOOT-INF/classes/static/docs'
	}
	finalizedBy 'copyDocument'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// mockmvc 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'


	//spring-doc ( Swagger )
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

}


// asciidoctor 설정
asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

test {
	useJUnitPlatform()
}


build {
	dependsOn copyDocument
}





tasks.named('test') {
	useJUnitPlatform()
}


